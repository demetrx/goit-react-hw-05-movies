{"version":3,"file":"static/js/movie-details-view.f7892308.chunk.js","mappings":"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","sources":["services/movies-api.js","webpack://react-homework-template/./src/views/MovieDetailsView/MovieDetailsView.module.css?8dcd","views/MovieDetailsView/MovieDetailsView.js"],"sourcesContent":["import Axios from 'axios';\n\nAxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0d3c19a06e728eab3e881b744ba766c6';\n\nconst fetchWithKey = async (url = '', query = '') => {\n  const paramsObj = {\n    api_key: API_KEY,\n  };\n\n  if (query) {\n    paramsObj.query = query;\n  }\n\n  const searchParams = new URLSearchParams(paramsObj);\n  const response = await Axios.get(`${url}?${searchParams}`);\n  return await response.data;\n};\n\nexport const fetchPopularMovies = async () => {\n  const data = await fetchWithKey('/trending/movie/week');\n  return data.results;\n};\n\nexport const fetchMovieById = async movieID => {\n  return await fetchWithKey(`/movie/${movieID}`);\n};\n\nexport const fetchMovieCast = async movieID => {\n  const data = await fetchWithKey(`/movie/${movieID}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieID => {\n  const data = await fetchWithKey(`/movie/${movieID}/reviews`);\n  return data.results;\n};\n\nexport const fetchWithSearch = async key_word => {\n  const data = await fetchWithKey(`/search/movie`, key_word);\n  return data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MovieDetailsView_main__8lzk7\",\"info\":\"MovieDetailsView_info__gv-fl\",\"additional\":\"MovieDetailsView_additional__6LPtQ\",\"btn\":\"MovieDetailsView_btn__5QQRf\"};","import { Suspense, lazy, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport {\n  NavLink,\n  Route,\n  Routes,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { IoMdArrowBack } from 'react-icons/io';\nimport * as moviesAPI from '../../services/movies-api';\nimport s from './MovieDetailsView.module.css';\n\nconst INIT_STATE = {\n  init: true,\n  title: '',\n  poster_path: '',\n  vote_average: '',\n  overview: '',\n  genres: [],\n};\n\nconst Cast = lazy(() =>\n  import('../../components/Cast/Cast' /* webpackChunkName: \"home-view\" */)\n);\n\nconst Reviews = lazy(() =>\n  import('../../components/Reviews/Reviews' /* webpackChunkName: \"home-view\" */)\n);\n\nconst MovieDetailsView = () => {\n  const [movie, setMovie] = useState(INIT_STATE);\n\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const placeToReturn = useRef(null);\n\n  useEffect(() => {\n    if (state) {\n      placeToReturn.current = state;\n    }\n  }, [state]);\n\n  const onGoBack = () => {\n    const returnTo = placeToReturn.current ? placeToReturn.current : '/';\n    navigate(returnTo);\n  };\n\n  const { slug } = useParams();\n  const movieID = slug.match(/[a-z0-9]+$/)[0];\n\n  useEffect(() => {\n    moviesAPI.fetchMovieById(movieID).then(setMovie);\n  }, [movieID]);\n\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const movieGenres = genres.map(item => item.name).join(', ');\n\n  return (\n    <>\n      <button className={s.btn} onClick={onGoBack}>\n        <IoMdArrowBack /> Go back {placeToReturn.current?.label}\n      </button>\n      {!movie.init && (\n        <>\n          <section className={s.main}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />\n            <div className={s.info}>\n              <h1>{title}</h1>\n              <p>User Score: {vote_average * 10}%</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>{movieGenres}.</p>\n            </div>\n          </section>\n\n          <section className={s.additional}>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n          </section>\n\n          <Suspense fallback={<h1>LOADING THE ROUTE...</h1>}>\n            <Routes>\n              <Route path=\"reviews\" element={<Reviews id={movieID} />} />\n              <Route path=\"cast\" element={<Cast id={movieID} />} />\n            </Routes>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsView;\n"],"names":["Axios","API_KEY","fetchWithKey","url","query","paramsObj","api_key","searchParams","URLSearchParams","response","data","fetchPopularMovies","results","fetchMovieById","movieID","fetchMovieCast","cast","fetchMovieReviews","fetchWithSearch","key_word","INIT_STATE","init","title","poster_path","vote_average","overview","genres","Cast","lazy","Reviews","useState","movie","setMovie","navigate","useNavigate","state","useLocation","placeToReturn","useRef","useEffect","current","useParams","slug","match","moviesAPI","then","movieGenres","map","item","name","join","className","s","onClick","returnTo","label","src","alt","to","Suspense","fallback","path","element","id"],"sourceRoot":""}